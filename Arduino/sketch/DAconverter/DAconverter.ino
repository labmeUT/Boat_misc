/****************************************************************************** 
MCP4725 Example Waveform Sketch
Joel Bartlett
SparkFun Electronics
Sept. 11, 2014
https://github.com/sparkfun/MCP4725_Breakout

This sketch takes data from a lookup table to provide 
waveforms to be generated by the MCP4725 DAC. 

Development environment specifics:
Arduino 1.0+
Hardware Version V14

This code is beerware; if you see me (or any other SparkFun employee) at the local, 
and you've found our code helpful, please buy us a round!

Distributed as-is; no warranty is given. 

This code builds off the sketch written by Mark VandeWettering, which can be found here:
http://brainwagon.org/2011/02/24/arduino-mcp4725-breakout-board/
*/

#include <Wire.h>//Include the Wire library to talk I2C

//This is the I2C Address of the MCP4725, by default (A0 pulled to GND).
//Please note that this breakout is for the MCP4725A0. 
#define MCP4725_ADDR1 0x60
#define MCP4725_ADDR2 0x61

int ch1; // Here's where we'll keep our channel values
int ch2;

//For devices with A0 pulled HIGH, use 0x61

//Sinewave Tables were generated using this calculator:
//http://www.daycounter.com/Calculators/Sine-Generator-Calculator.phtml

void setup()
{ 
  pinMode(5, INPUT); // Set our input pins as such
  pinMode(6, INPUT);
  
  Wire.begin();
  Serial.begin(9600);

}
//---------------------------------------------------
void loop()
{
  int ch1;
  int ch2;
  int val1=2000;
  int val2=2000;
  
  
  ch1 = pulseIn(5, HIGH, 25000); // Read the pulse width of 
  ch2 = pulseIn(6, HIGH, 25000); // each channel
  if(ch1 != 0 && ch2 != 0)
  {
    val1 = cnvrng(ch1);
    val2 = cnvrng(ch2);
  }
  else
  {
    val1 = 1920;
    val2 = 1920;
  }
  
  Wire.beginTransmission(MCP4725_ADDR1);
  Wire.write(64);   // cmd to update the DAC
  Wire.write(val1 >> 4);        // the 8 most significant bits...
  Wire.write((val1 & 15) << 4); // the 4 least significant bits...
  Wire.endTransmission();
  
  Wire.beginTransmission(MCP4725_ADDR2);
  Wire.write(64);                     // cmd to update the DAC
  Wire.write(val2 >> 4);        // the 8 most significant bits...
  Wire.write((val2 & 15) << 4); // the 4 least significant bits...
  Wire.endTransmission();
  
 /* Serial.print("ch1:");
  Serial.print(ch1);
  Serial.print(" val1:");
  Serial.print(val1);
  
  Serial.print(" ch2:");
  Serial.print(ch2);
  Serial.print(" val2:");
  Serial.println(val2);*/
  
  //delay(50);
  
  
  //lookup = (lookup + 1) & 511;
}

int cnvrng(int pwm)
{
  int out;
  if(pwm > 1020)
  {
    out = (pwm-1020)*4;
  }
  else
    out = 0;
  
  if(out > 4095)
  {
    out = 4095;
  }
  return(out);
}


